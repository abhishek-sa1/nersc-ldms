---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nersc-ldms-aggr
  namespace: {{ .Values.namespace }}
spec:
  serviceName: nersc-ldms-aggr
  replicas: 1
  selector:
    matchLabels:
      app: nersc-ldms-aggr
  template:
    metadata:
      labels:
        app: nersc-ldms-aggr
      annotations:
        service.cray.io/public: "true"
        {{- if .Values.net_atat_def }}
        k8s.v1.cni.cncf.io/networks: ipvlan-ldms-agg-hsn
        {{- end }}
    spec:
      hostname: nersc-ldms-aggr
      {{- if .Values.imagePullSecretsOption }}
      {{- toYaml .Values.imagePullSecretsOption | nindent 6 }}
      {{- end }}
      containers:
        {{- range .Values.aggs }}
        - name: {{ .name }}
          image: {{ $.Values.image.registry }}{{ $.Values.image.repository }}:{{ $.Values.image.tag | toString }}
          imagePullPolicy: IfNotPresent
          args:
            - /bin/bash
            - -c
            - /ldms_bin/start_munge.bash /ldms_conf/nersc-munge-key_munge.conf && while [ 1 ]; do source {{ .env }} ; /ldms_bin/ldmsd.bash; echo -n "\nLDMSD ${MY_CONTAINER_NAME} RESTARTED, EXIT CODE $?\n"; sleep 5; done
          env:
            - name: MY_CONTAINER_NAME
              value: {{ .name }}
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: ldms-conf
              mountPath: /ldms_conf
            - name: ldms-bin
              mountPath: /ldms_bin
{{- if $.Values.authVolMountOption }}
{{- toYaml $.Values.authVolMountOption | nindent 12 }}
{{- end }}
          resources:
            {{- toYaml $.Values.agg.resources | nindent 12 }}
        {{- end }}
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostname: nersc-ldms-aggr
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      subdomain: nersc-ldms-aggr
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: ldms-conf
          configMap:
            name: nersc-ldms-conf
        - name: ldms-bin
          configMap:
            name: nersc-ldms-bin
            defaultMode: 0500
{{- if .Values.authVolOption }}
{{ toYaml .Values.authVolOption | nindent 8 }}
{{- end }}
